{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./slice/userSlice\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nvar persistConfig = {\n  storage: storage,\n  key: \"root\"\n};\nvar store;\nvar persistedReducer = persistReducer(persistConfig, userReducer);\n\nif (false) {\n  store = configureStore({\n    reducer: {\n      user: userReducer\n    },\n    middleware: function middleware(getDefaultMiddleware) {\n      return getDefaultMiddleware({\n        serializableCheck: false\n      });\n    }\n  });\n} else {\n  store = configureStore({\n    reducer: {\n      user: persistedReducer\n    },\n    middleware: function middleware(getDefaultMiddleware) {\n      return getDefaultMiddleware({\n        serializableCheck: false\n      });\n    }\n  });\n}\n\nexport default store;","map":{"version":3,"sources":["/Users/shreyvijayvargiya/Desktop/Project/Personal-Portfolio-Starter/redux/store.js"],"names":["configureStore","userReducer","persistReducer","storage","persistConfig","key","store","persistedReducer","reducer","user","middleware","getDefaultMiddleware","serializableCheck"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,IAAMC,aAAa,GAAG;AACrBD,EAAAA,OAAO,EAAPA,OADqB;AAErBE,EAAAA,GAAG,EAAE;AAFgB,CAAtB;AAKA,IAAIC,KAAJ;AAEA,IAAMC,gBAAgB,GAAGL,cAAc,CAACE,aAAD,EAAgBH,WAAhB,CAAvC;;AAEA,WAAmC;AAClCK,EAAAA,KAAK,GAAGN,cAAc,CAAC;AACtBQ,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAER;AAAR,KADa;AAEtBS,IAAAA,UAAU,EAAE,oBAACC,oBAAD;AAAA,aACXA,oBAAoB,CAAC;AAAEC,QAAAA,iBAAiB,EAAE;AAArB,OAAD,CADT;AAAA;AAFU,GAAD,CAAtB;AAKA,CAND,MAMO;AACNN,EAAAA,KAAK,GAAGN,cAAc,CAAC;AACtBQ,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAEF;AAAR,KADa;AAEtBG,IAAAA,UAAU,EAAE,oBAACC,oBAAD;AAAA,aACXA,oBAAoB,CAAC;AAAEC,QAAAA,iBAAiB,EAAE;AAArB,OAAD,CADT;AAAA;AAFU,GAAD,CAAtB;AAKA;;AACD,eAAeN,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./slice/userSlice\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n\tstorage,\n\tkey: \"root\",\n};\n\nlet store;\n\nconst persistedReducer = persistReducer(persistConfig, userReducer);\n\nif (typeof window === \"undefined\") {\n\tstore = configureStore({\n\t\treducer: { user: userReducer },\n\t\tmiddleware: (getDefaultMiddleware) =>\n\t\t\tgetDefaultMiddleware({ serializableCheck: false }),\n\t});\n} else {\n\tstore = configureStore({\n\t\treducer: { user: persistedReducer },\n\t\tmiddleware: (getDefaultMiddleware) =>\n\t\t\tgetDefaultMiddleware({ serializableCheck: false }),\n\t});\n}\nexport default store;\n"]},"metadata":{},"sourceType":"module"}